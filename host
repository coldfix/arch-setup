#! /usr/bin/env zsh
echo "Do not execute!" && exit

# ----------------------------------------
# NOTE: This is a VERY non-paranoid setup:
#  - /usr is not encrypted
#  - a key for /home resides within /etc/key
#  - a cryptheader backup is proposed
# ----------------------------------------

# ----------------------------------------
# Mount USB drive and load favorite keyboard layout
# ----------------------------------------
usb=/tmp/usb
repo=$usb/arch-setup
prefix=/client

mkdir -p $usb
mount /dev/sdc1 $usb
loadkeys $repo/map/c++.map

# ----------------------------------------
# Save history to USB
# ----------------------------------------
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=$repo/log/host-$(date +'%F %T')
setopt incappendhistory
export EDITOR=vim
export DIFFTOOL=vimdiff

EDIT()
{
    for file in $@; do
        if [[ -f $prefix$file ]]; then
            $DIFFTOOL {$repo,$prefix}$file;
        else
            $EDITOR $prefix$file
        fi
    done
}


# ----------------------------------------
# Partition hdd with GPT (BIOS-GPT)
#
# A full setup looks like this:
# - Create new partition table:     o
# - Switch to 1-byte alignment:     x L 1 m 
# - Create BIOS boot partition:     n 1 34 2047 ef02
# - Revert partition alignment:     x L 2048 m
# - Create LVM partition:           n . . . 8e00
# - Write and exit to shell:        w
# ----------------------------------------
lvmdrive=/dev/sda
lvmpart=${lvmdrive}2

gdisk $lvmdrive


# ----------------------------------------
# Setup LVM
# ----------------------------------------
pvcreate $lvmpart
vgcreate scsi $lvmpart
lvcreate -L 256M     scsi -n boot
lvcreate -L 8G       scsi -n root
lvcreate -L 24G      scsi -n usr
lvcreate -l 100%FREE scsi -n home
vgchange -ay

# ----------------------------------------
# Encrypt LUKS partitions
# ----------------------------------------
cryptsetup luksFormat -y /dev/scsi/root
cryptsetup luksFormat -y /dev/scsi/home
cryptsetup open /dev/scsi/root crypt-root
cryptsetup open /dev/scsi/home crypt-home

# ----------------------------------------
# Create filesystems
# ----------------------------------------
mkfs.ext4 -m0 -L boot /dev/scsi/boot
mkfs.ext4 -m0 -L arch /dev/scsi/root
mkfs.ext4 -m0 -L usr  /dev/scsi/usr
mkfs.ext4 -m0 -L home /dev/scsi/home

# ----------------------------------------
# Mount filesystems
# ----------------------------------------
mkdir -p $prefix
mount /dev/mapper/crypt-root $prefix
mkdir -p $prefix/boot
mkdir -p $prefix/home
mkdir -p $prefix/usr
mount /dev/mapper/crypt-home $prefix/home
mount /dev/scsi/boot         $prefix/boot
mount /dev/scsi/usr          $prefix/usr

# ----------------------------------------
# Add key to home (so it can be automounted)
# ----------------------------------------
keys=$prefix/etc/key
mkdir -pm 700 $keys
dd if=/dev/urandom of=$keys/home bs=1024 count=4
chmod 0400 $keys/home
cryptsetup luksAddKey /dev/scsi/home $keys/home

# ----------------------------------------
# Backup LUKS crypt headers to USB
# 
# NOTE: only for non-paranoid!
# ----------------------------------------
cryptsetup luksHeaderBackup /dev/scsi/root --header-backup-file $repo/log/root.img
cryptsetup luksHeaderBackup /dev/scsi/home --header-backup-file $repo/log/home.img

# ----------------------------------------
# Prepare mirrorlist
# ----------------------------------------
cp /etc/pacman.d/mirrorlist /tmp/mirrorlist
rankmirrors -n 6 /tmp/mirrorlist > /etc/pacman.d/mirrorlist
EDIT /etc/pacman.d/mirrorlist

# ----------------------------------------
# Prepare base system
# 
# I want vim, zsh and keyboard layouts available
# ----------------------------------------
pacstrap $prefix base base-devel $EDITOR zsh
cp $repo/map/*.map $prefix/usr/share/kbd/keymaps

# ----------------------------------------
# Create and check /etc/fstab
#
# NOTE: set passno=0 for /usr!
# ----------------------------------------
genfstab -p $prefix >> $prefix/etc/fstab
EDIT /etc/fstab
EDIT /etc/crypttab

# ----------------------------------------
# Enter client phase
# ----------------------------------------
arch-chroot $prefix zsh

